{"version":3,"sources":["components/pages/home.jsx","components/MapMarker.jsx","components/pages/places.jsx","components/Services/WifiService.js","components/Charts/OccupacyBandChart.jsx","components/Charts/OccupacyChannelChart.jsx","components/Charts/ValuesChannelChart.jsx","components/Charts/ValuesChannelSpectogram.jsx","components/pages/place.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","Jumbotron","fluid","Container","Row","Col","xs","Carousel","Item","className","src","alt","Caption","Card","Header","as","Body","Title","to","controls","indicators","Image","rounded","Button","variant","MapMarker","props","state","open","handleInfoButtonClick","bind","this","setState","info","text","city","type","address","link","onClick","size","Component","Places","center","lat","lng","zoom","locations","markers","map","l","i","key","options","mapOptions","bootstrapURLKeys","defaultCenter","defaultZoom","instance","constructor","responses","baseUrl","controller","AbortController","request","callback","signal","Promise","res","rej","json","then","response","catch","err","c","th","r","_get","b","abort","OccupacyBandChart","data","loading","bandNames","1","2","3","4","5","6","loadData","setupDraw","prevProps","threshold","WifiService","bandRange","range","length","getBandOccupacy","forEach","p","bandIdx","findIndex","d","band","splice","push","value","drawChart","margin","top","right","bottom","left","svg","select","attr","svgBoundaries","node","getBoundingClientRect","width","height","xValue","yValue","selection","title","xAxisLabel","yAxisLabel","innerWidth","innerHeight","xScale","scaleBand","domain","padding","yScale","scaleLinear","nice","colorScale","scaleOrdinal","schemeTableau10","xAxis","axisBottom","tickSize","tickFormat","tickPadding","yAxis","axisLeft","g","selectAll","gEnter","enter","append","merge","xAxisG","xAxisGEnter","call","remove","yAxisG","yAxisGEnter","html","occFormat","format","bands","bandsEnter","bandwidth","transition","bandTitles","titleG","titleGEnter","loader","Spinner","animation","id","OccupacyChannelChart","getChannelsOccupacy","Channel","Occupacy","channels","channelsEnter","interpolateSinebow","channelTitles","dateBetween","date","sh","sm","fh","fm","s","parseInt","f","t","getHours","getMinutes","ValuesChannelChart","selectedChannels","handleChannelChange","from","ratio","filterData","includes","getChannelsValues","parsed","From","h","Date","setHours","visibility","fData","check","split","Averaged","cValue","scaleTime","extent","filter","min","max","schemeCategory10","timeFormat","ticks","timeMinute","every","channelsG","channelsGEnter","channelsValues","channelsValuesEnter","fromFormat","exit","lineData","nest","entries","lineGenerator","line","x","y","channelsLines","values","some","legendsG","legendsGEnter","legends","legendsEnter","on","ValuesChannelSpectogram","w","Math","ceil","interpolatePlasma","Place","match","params","bandOccupancy","dbthreshold","channelOccupancy","runchart","spectogram","debouncedHandleThresholdChange","debounce","handleThresholdChange","handleParamChange","e","chart","persist","target","param","Form","Group","controlId","Label","Control","onChange","step","App","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","inline","FormControl","placeholder","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1036b27c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Jumbotron, Col, Carousel, Row, Card, Button, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function Home() {\r\n  return (\r\n    <div>\r\n      <Jumbotron fluid>\r\n        <Container>\r\n          <Row>\r\n            <Col xs={4}>\r\n              <h1>WIFI 5G data viewer</h1>\r\n              <p>\r\n                Online tool to visualize 5G data\r\n              </p>\r\n            </Col>\r\n            <Col xs={8}>\r\n              <Carousel>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className=\"d-block w-100\"\r\n                    src={'images/charts/band_occupacy.png'}\r\n                    alt=\"Band occupancy\"\r\n                  />\r\n                  <Carousel.Caption>\r\n                    <h3>Band occupancy</h3>\r\n                    <p>See the occupancy of each band across all time</p>\r\n                  </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className=\"d-block w-100\"\r\n                    src={'images/charts/channel_occupacy.png'}\r\n                    alt=\"Channel occupancy\"\r\n                  />\r\n                  <Carousel.Caption>\r\n                    <h3>Channel occupancy</h3>\r\n                    <p>See the occupancy of each channel across all time</p>\r\n                  </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className=\"d-block w-100\"\r\n                    src={'images/charts/runchart.png'}\r\n                    alt=\"Runchart\"\r\n                  />\r\n                  <Carousel.Caption>\r\n                    <h3>Runchart</h3>\r\n                    <p>See the occupancy's evolution of each channel through all time</p>\r\n                  </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className=\"d-block w-100\"\r\n                    src={'images/charts/spectogram.png'}\r\n                    alt=\"Spectrogram\"\r\n                  />\r\n                  <Carousel.Caption>\r\n                    <h3>Spectrogram</h3>\r\n                    <p>See the occupancy's evolution of each channel through all time</p>\r\n                  </Carousel.Caption>\r\n                </Carousel.Item>\r\n              </Carousel>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container className=\"home-container\">\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <Card.Header as=\"h5\">Different locations around the world</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>Different datasets have been gathered from Catalonia, US...</Card.Title>\r\n                <Link to=\"/places\" className=\"btn btn-primary\">Check locations</Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Carousel controls={false} indicators={false}>\r\n              <Carousel.Item>\r\n                <img\r\n                  className=\"d-block w-100\"\r\n                  src={'images/places/fcb.jpg'}\r\n                  alt=\"Camp nou\"\r\n                />\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <img\r\n                  className=\"d-block w-100\"\r\n                  src={'images/places/rice.jpg'}\r\n                  alt=\"Rice University\"\r\n                />\r\n              </Carousel.Item>\r\n            </Carousel>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Image src={'images/charts/runchart.png'} rounded className=\"img-fluid\" />\r\n            <Image src={'images/charts/spectogram.png'} rounded className=\"img-fluid\" />\r\n          </Col>\r\n          <Col>\r\n            <Card>\r\n              <Card.Header as=\"h5\">Several charts to observe the data</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>Bar charts, runcharts, spectrogram... All of them interactive charts to display the data as you want</Card.Title>\r\n                <Link to=\"/places/fcb\" className=\"btn btn-primary\">Check charts</Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <Card.Header as=\"h5\">Wi-Fi Channel Bonding: an All-Channel System and Experimental Study from Urban Hotspots to a Sold-Out Stadium</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>All data have been measured and processed by Sergio Barrachina, author of this paper</Card.Title>\r\n                <Button variant=\"primary\">Check paper</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Image src={'images/paper.png'} rounded className=\"img-fluid\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class MapMarker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        }\r\n\r\n        this.handleInfoButtonClick = this.handleInfoButtonClick.bind(this);\r\n    }\r\n\r\n    handleInfoButtonClick() {\r\n        this.setState(state => ({\r\n            open: !state.open\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const { text, city, type, address, link } = this.props;\r\n        const { open } = this.state;\r\n\r\n        let info;\r\n        if (open) {\r\n            info = <div className=\"map-info\">\r\n                <span>{type}</span>\r\n                <span>{city}</span>\r\n                <span>{address}</span>\r\n                <Link to={link} className=\"map-info-lnk btn btn-outline-primary btn-sm\" onClick={this.handleInfoButtonClick}>→</Link>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"map-marker\">\r\n                {text}\r\n                <Button className=\"map-info-btn\" onClick={this.handleInfoButtonClick} variant=\"outline-primary\" size=\"sm\">{!open ? '+' : '-'}</Button>\r\n                {info}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport mapOptions from \"../../assets/maps_options.json\";\r\nimport { MapMarker } from \"../MapMarker\";\r\n\r\nexport class Places extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      center: {\r\n        lat: 41.38,\r\n        lng: 2.12\r\n      },\r\n      zoom: 13,\r\n      locations: [\r\n        // Rice Village Apartments Apartment Houston 2410 Shakespeare St\r\n        {\r\n          text: \"Rice Village Apartments\",\r\n          type: \"Apartment\",\r\n          city: \"Houston\",\r\n          address: \"2410 Shakespeare St\",\r\n          lat: 29.714229583740234,\r\n          lng: -95.4140396118164,\r\n          link: \"/places/coming-soon\"\r\n        },\r\n        // Rice Networks laboratory Campus Houston 6100 Main St, Houston, Duncan Hall\r\n        {\r\n          text: \"Rice Networks laboratory\",\r\n          type: \"Apartment\",\r\n          city: \"Houston\",\r\n          address: \"6100 Main St, Houston, Duncan Hall\",\r\n          lat: 29.720129013061523,\r\n          lng: -95.39883422851562,\r\n          link: \"/places/coming-soon\"\r\n        },\r\n        // Technology for All Community center Houston 2220 Broadway St # B\r\n        {\r\n          text: \"Technology for All\",\r\n          type: \"Community center\",\r\n          city: \"Houston\",\r\n          address: \"2220 Broadway St # B\",\r\n          lat: 29.70783233642578,\r\n          lng: -95.27803039550781,\r\n          link: \"/places/coming-soon\"\r\n        },\r\n        // Flo Paris at Rice Village Café Houston 5407 Morningside Dr\r\n        {\r\n          text: \"Flo Paris at Rice Village\",\r\n          type: \"Café\",\r\n          city: \"Houston\",\r\n          address: \"5407 Morningside Dr\",\r\n          lat: 29.717344284057617,\r\n          lng: -95.4149398803711,\r\n          link: \"/places/coming-soon\"\r\n        },\r\n        // Rice Village parking lot Shopping mall Houston 2507 Amherst Spc #Dok\r\n        {\r\n          text: \"Rice Village parking lot\",\r\n          type: \"Shopping mall\",\r\n          city: \"Houston\",\r\n          address: \"2507 Amherst Spc #Dok\",\r\n          lat: 29.715858459472656,\r\n          lng: -95.41654968261719,\r\n          link: \"/places/coming-soon\"\r\n        },\r\n        // Apartament in Sagrera Apartment Barcelona c/Felip II 90\r\n        {\r\n          text: \"Apartament in Sagrera\",\r\n          type: \"Apartment\",\r\n          city: \"Barcelona\",\r\n          address: \"c/Felip II 90\",\r\n          lat: 41.41958999633789,\r\n          lng: 2.187973737716675,\r\n          link: \"/places/coming-soon\"\r\n        },\r\n        // Wireless Networking laboratory Campus Barcelona c/Roc Boronat 118\r\n        {\r\n          text: \"Wireless Networking laboratory\",\r\n          type: \"Campus\",\r\n          city: \"Barcelona\",\r\n          address: \"c/Roc Boronat 118\",\r\n          lat: 41.40289306640625,\r\n          lng: 2.1943678855895996,\r\n          link: \"/places/coming-soon\"\r\n        },\r\n        // 22@ area Office area Barcelona c/Llacuna 124\r\n        {\r\n          text: \"22@ area\",\r\n          type: \"Office area\",\r\n          city: \"Barcelona\",\r\n          address: \"c/Llacuna 124\",\r\n          lat: 41.40372848510742,\r\n          lng: 2.1954846382141113,\r\n          link: \"/places/coming-soon\"\r\n        },\r\n        // Hotel Gallery Hotel Barcelona c/Roselló 249\r\n        {\r\n          text: \"Hotel Gallery\",\r\n          type: \"Hotel\",\r\n          city: \"Barcelona\",\r\n          address: \"c/Roselló 249\",\r\n          lat: 41.395023345947266,\r\n          lng: 2.1596014499664307,\r\n          link: \"/places/coming-soon\"\r\n        },\r\n        // Sagrada Familia Tourist zone Barcelona Av. Gaudí 19\r\n        {\r\n          text: \"Sagrada Familia\",\r\n          type: \"Tourist zone\",\r\n          city: \"Barcelona\",\r\n          address: \"Av. Gaudí 19\",\r\n          lat: 41.4078254699707,\r\n          lng: 2.1743903160095215,\r\n          link: \"/places/coming-soon\"\r\n        },\r\n        // Camp Nou Stadium Barcelona c/d'Arístides Maillol 12\r\n        {\r\n          text: \"Camp Nou\",\r\n          type: \"Stadium\",\r\n          city: \"Barcelona\",\r\n          address: \"c/d'Arístides Maillol 12\",\r\n          lat: 41.37916564941406,\r\n          lng: 2.1199049949645996,\r\n          link: \"/places/fcb\"\r\n        },\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { locations } = this.state;\r\n\r\n    let markers = locations.map((l, i) => <MapMarker key={i} {...l} />);\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col xs={6}>\r\n            <Row className=\"map-container\">\r\n              <GoogleMapReact\r\n                options={mapOptions}\r\n                bootstrapURLKeys={{ key: \"AIzaSyAT0-rCleVv535HxMw6G75w3UzGtj27nNg\" }}\r\n                defaultCenter={{ lat: 29.718638196063072, lng: -95.40853309631348 }}\r\n                defaultZoom={15}\r\n              >\r\n                {markers}\r\n              </GoogleMapReact>\r\n            </Row>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <Row className=\"map-container\">\r\n              <GoogleMapReact\r\n                options={mapOptions}\r\n                bootstrapURLKeys={{ key: \"AIzaSyAT0-rCleVv535HxMw6G75w3UzGtj27nNg\" }}\r\n                defaultCenter={{ lat: 41.395023345947266, lng: 2.1596014499664307 }}\r\n                defaultZoom={13}\r\n              >\r\n                {markers}\r\n              </GoogleMapReact>\r\n            </Row>\r\n          </Col>\r\n\r\n          {/* <CardColumns>\r\n          <Card>\r\n            <Card.Img variant=\"top\" src={'images/fcb.jpg'} />\r\n            <Card.Body>\r\n              <Card.Title>FCB Camp Nou</Card.Title>\r\n              <Card.Text>\r\n                This is a wider card with supporting text below as a natural lead-in to\r\n                additional content. This content is a little bit longer.\r\n            </Card.Text>\r\n              <Link to=\"/places/fcb\" className=\"btn btn-primary\">FCB</Link>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Img variant=\"top\" src={'images/fcb.jpg'} />\r\n            <Card.Body>\r\n              <Card.Title>FCB Camp Nou</Card.Title>\r\n              <Card.Text>\r\n                This is a wider card with supporting text below as a natural lead-in to\r\n                additional content. This content is a little bit longer.\r\n            </Card.Text>\r\n              <Button variant=\"primary\">Go somewhere</Button>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Img variant=\"top\" src={'images/fcb.jpg'} />\r\n            <Card.Body>\r\n              <Card.Title>FCB Camp Nou</Card.Title>\r\n              <Card.Text>\r\n                This is a wider card with supporting text below as a natural lead-in to\r\n                additional content. This content is a little bit longer.\r\n            </Card.Text>\r\n              <Button variant=\"primary\">Go somewhere</Button>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Img variant=\"top\" src={'images/fcb.jpg'} />\r\n            <Card.Body>\r\n              <Card.Title>FCB Camp Nou</Card.Title>\r\n              <Card.Text>\r\n                This is a wider card with supporting text below as a natural lead-in to\r\n                additional content. This content is a little bit longer.\r\n            </Card.Text>\r\n              <Button variant=\"primary\">Go somewhere</Button>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Img variant=\"top\" src={'images/fcb.jpg'} />\r\n            <Card.Body>\r\n              <Card.Title>FCB Camp Nou</Card.Title>\r\n              <Card.Text>\r\n                This is a wider card with supporting text below as a natural lead-in to\r\n                additional content. This content is a little bit longer.\r\n            </Card.Text>\r\n              <Button variant=\"primary\">Go somewhere</Button>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Img variant=\"top\" src={'images/fcb.jpg'} />\r\n            <Card.Body>\r\n              <Card.Title>FCB Camp Nou</Card.Title>\r\n              <Card.Text>\r\n                This is a wider card with supporting text below as a natural lead-in to\r\n                additional content. This content is a little bit longer.\r\n            </Card.Text>\r\n              <Button variant=\"primary\">Go somewhere</Button>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Img variant=\"top\" src={'images/fcb.jpg'} />\r\n            <Card.Body>\r\n              <Card.Title>FCB Camp Nou</Card.Title>\r\n              <Card.Text>\r\n                This is a wider card with supporting text below as a natural lead-in to\r\n                additional content. This content is a little bit longer.\r\n            </Card.Text>\r\n              <Button variant=\"primary\">Go somewhere</Button>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Img variant=\"top\" src={'images/fcb.jpg'} />\r\n            <Card.Body>\r\n              <Card.Title>FCB Camp Nou</Card.Title>\r\n              <Card.Text>\r\n                This is a wider card with supporting text below as a natural lead-in to\r\n                additional content. This content is a little bit longer.\r\n            </Card.Text>\r\n              <Button variant=\"primary\">Go somewhere</Button>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </CardColumns> */}\r\n        </Row>\r\n      </Container >\r\n    )\r\n  }\r\n}","import { json } from \"d3\";\r\n\r\nclass WifiService {\r\n    constructor() {\r\n        const instance = this.constructor.instance;\r\n        if (instance) {\r\n            return instance;\r\n        }\r\n\r\n        this.constructor.instance = this;\r\n\r\n        this.responses = {};\r\n        this.baseUrl = 'http://localhost:8080';\r\n        // this.baseUrl = 'http://localhost:8080';\r\n\r\n        this.controller = new AbortController();\r\n    }\r\n\r\n    _get(request, callback) {\r\n        let signal = this.controller.signal;\r\n\r\n        if (!this.responses[request]) {\r\n            this.responses[request] = new Promise((res, rej) => {\r\n                json(`${this.baseUrl}/${request}`, { signal })\r\n                    .then(response => res(callback(response)))\r\n                    .catch(err => {\r\n                        delete this.responses[request];\r\n                        rej(err);\r\n                    });\r\n            });\r\n        }\r\n\r\n        return this.responses[request]; // promise\r\n    }\r\n\r\n    getChannelValues(c, th, r) {\r\n        let request = `mongo/values/channel/${c}/threshold/${th}/ratio/${r}`;\r\n\r\n        return this._get(request, response => response);\r\n    }\r\n\r\n    getChannelsValues(th, r) {\r\n        let request = `mongo/values/channels/threshold/${th}/ratio/${r}`;\r\n\r\n        return this._get(request, response => response);\r\n    }\r\n\r\n    getChannelOccupacy(c, th, r) {\r\n        let request = `mongo/occupacy/channel/${c}/threshold/${th}/ratio/${r}`;\r\n\r\n        return this._get(request, response => response);\r\n    }\r\n\r\n    getChannelsOccupacy(th) {\r\n        let request = `mongo/occupacy/channels/threshold/${th}`;\r\n\r\n        return this._get(request, response => response);\r\n    }\r\n\r\n    getBandOccupacy(b, th) {\r\n        let request = `mongo/occupacy/band/${b}/threshold/${th}`;\r\n\r\n        return this._get(request, response => response);\r\n    }\r\n\r\n    abort() {\r\n        this.controller.abort();\r\n    }\r\n}\r\n\r\nexport default new WifiService();","import React, { Component } from \"react\";\r\nimport WifiService from \"../Services/WifiService\";\r\nimport {\r\n    select,\r\n    scaleLinear,\r\n    scaleBand,\r\n    scaleOrdinal,\r\n    axisBottom,\r\n    axisLeft,\r\n    range,\r\n    schemeTableau10,\r\n    format\r\n} from \"d3\";\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport class OccupacyBandChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: 0,\r\n            bandNames: {\r\n                1: \"U-NII-1\",\r\n                2: \"U-NII-2\",\r\n                3: \"U-NII-2-C1\",\r\n                4: \"U-NII-2-C2\",\r\n                5: \"U-NII-2-C3\",\r\n                6: \"U-NII-3\",\r\n            }\r\n        };\r\n    }\r\n\r\n    /*\r\n        U-NII-1: 1 (#36) a 4 (#48)\r\n        U-NII-2: 5 (#52) a 8 (#64)\r\n        U-NII-2-C1: 9 (#100) a 12 (#112)\r\n        U-NII-2-C2: 13 (#116) a 16 (#128)\r\n        U-NII-2-C3: 17 (#132) a 20 (#144)\r\n        U-NII-3: 21 (#149) a 24 (#161)\r\n     */\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n        this.setupDraw();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { threshold } = this.props;\r\n        if (threshold !== prevProps.threshold) {\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        WifiService.abort();\r\n    }\r\n\r\n    loadData() {\r\n        // /band/:band/threshold/:threshold\r\n        const { threshold} = this.props;\r\n        const bandRange = range(1, 7);\r\n\r\n        this.setState(() => ({\r\n            loading: bandRange.length\r\n        }));\r\n\r\n        bandRange\r\n            .map(b => WifiService.getBandOccupacy(b, threshold))\r\n            .forEach(p => p.then(response => {\r\n                let { data } = this.state;\r\n                let bandIdx = data.findIndex(d => d.band === response.band);\r\n                if (bandIdx !== -1) {\r\n                    data.splice(bandIdx, 1);\r\n                }\r\n                data.push({\r\n                    band: response.band,\r\n                    value: response.data\r\n                });\r\n\r\n                this.setState(state => ({\r\n                    data: data,\r\n                    loading: state.loading - 1\r\n                }), function () {\r\n                    this.drawChart();\r\n                });\r\n            }).catch(() => {\r\n                this.setState(state => ({\r\n                    loading: state.loading - 1\r\n                }));\r\n            }))\r\n    }\r\n\r\n    setupDraw() {\r\n        const margin = { top: 40, right: 20, bottom: 60, left: 65 };\r\n\r\n        const title = \"Band occupancy %\";\r\n\r\n        const svg = select('#occupacy-band-chart')\r\n            .attr('viewbox', '(0, 0, 960, 500)')\r\n            .attr('width', '100%')\r\n            .attr('height', 500);\r\n\r\n        const svgBoundaries = svg.node().getBoundingClientRect();\r\n        const width = svgBoundaries.width;\r\n        const height = svgBoundaries.height;\r\n\r\n        const xValue = d => d.band;\r\n        const xAxisLabel = \"Band\";\r\n\r\n        const yValue = d => d.value;\r\n        const yAxisLabel = \"[&sigma;] Occupancy\";\r\n\r\n        this.setState(() => ({\r\n            selection: svg,\r\n            width,\r\n            height,\r\n            margin,\r\n            title,\r\n            xAxisLabel,\r\n            yAxisLabel,\r\n            xValue,\r\n            yValue\r\n        }), function () {\r\n            this.drawChart();\r\n        });\r\n    }\r\n\r\n    drawChart() {\r\n        const {\r\n            data,\r\n            selection,\r\n            width,\r\n            height,\r\n            margin,\r\n            title,\r\n            xAxisLabel,\r\n            yAxisLabel,\r\n            xValue,\r\n            yValue,\r\n            bandNames\r\n        } = this.state;\r\n\r\n        const innerWidth = width - margin.right - margin.left;\r\n        const innerHeight = height - margin.top - margin.bottom;\r\n\r\n        // horizontal axis\r\n        // band\r\n        const xScale = scaleBand()\r\n            .domain(range(1, 7))\r\n            .range([0, innerWidth])\r\n            .padding(0.1);\r\n\r\n        // vertical axis\r\n        // values\r\n        const yScale = scaleLinear()\r\n            .domain([1, 0])\r\n            .range([0, innerHeight])\r\n            .nice();\r\n\r\n        const colorScale = scaleOrdinal()\r\n            .domain(range(1, 7))\r\n            .range(schemeTableau10)\r\n\r\n        const xAxis = axisBottom(xScale)\r\n            .tickSize(-innerHeight)\r\n            .tickFormat(d => bandNames[d])\r\n            .tickPadding(15);\r\n\r\n        const yAxis = axisLeft(yScale)\r\n            .tickSize(-innerWidth)\r\n            .tickPadding(10);\r\n\r\n        const g = selection.selectAll('.container').data([null]);\r\n        const gEnter = g.enter().append('g')\r\n            .attr('class', 'container');\r\n        gEnter.merge(g)\r\n            .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n\r\n        const xAxisG = g.select('.x-axis');\r\n        const xAxisGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'x-axis');\r\n        xAxisG\r\n            .merge(xAxisGEnter)\r\n            .call(xAxis)\r\n            .attr('transform', `translate(0, ${innerHeight})`)\r\n            .selectAll('domain').remove();\r\n\r\n        // const xAxisLabelText = \r\n        xAxisGEnter.append('text')\r\n            .attr('class', 'axis-label')\r\n            .attr('y', 40)\r\n            .attr('font-size', 20)\r\n            .attr('fill', 'black')\r\n            .attr('text-anchor', 'middle')\r\n            .merge(xAxisG.select('.axis-label'))\r\n            .attr('x', innerWidth / 2)\r\n            .text(xAxisLabel);\r\n\r\n        const yAxisG = g.select('.y-axis');\r\n        const yAxisGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'y-axis');\r\n        yAxisG.merge(yAxisGEnter)\r\n            .call(yAxis)\r\n            .selectAll('domain').remove();\r\n\r\n        // const yAxisLabelText = \r\n        yAxisGEnter.append('text')\r\n            .attr('class', 'axis-label')\r\n            .attr('y', -35)\r\n            .attr('fill', 'black')\r\n            .attr('transform', 'rotate(-90)')\r\n            .attr('text-anchor', 'middle')\r\n            .attr('font-size', 20)\r\n            .merge(yAxisG.select('.axis-label'))\r\n            .attr('x', -innerHeight / 2)\r\n            .html(yAxisLabel);\r\n\r\n        const occFormat = format(\".2f\");\r\n\r\n        const bands = g.merge(gEnter).selectAll('.rect-band').data(data, d => xValue(d));\r\n        const bandsEnter = bands.enter().append('rect')\r\n            .attr('class', 'rect-band')\r\n            .attr('band', d => xValue(d))\r\n            .attr('stroke', d => colorScale(xValue(d)))\r\n            .attr('fill', d => colorScale(xValue(d)))\r\n            .attr('stroke-width', 2)\r\n            .attr('stroke-linecap', 'round')\r\n            .attr('width', d => xScale.bandwidth())\r\n            .attr('y', d => innerHeight)\r\n            .attr('height', 0);\r\n\r\n        bandsEnter.merge(bands)\r\n            .transition()\r\n            .attr('x', d => xScale(xValue(d)))\r\n            .attr('y', d => yScale(yValue(d)))\r\n            .attr('height', d => innerHeight - yScale(yValue(d)));\r\n\r\n        const bandTitles = bands.merge(bandsEnter).selectAll('.rect-band-title').data(d => [d]);\r\n        bandTitles.enter().append('title')\r\n            .attr('class', 'rect-band-title')\r\n            .merge(bandTitles)\r\n            .text(d => `${bandNames[xValue(d)]}\\nOccupancy: ${occFormat(yValue(d))}%\\nChannels: [${((xValue(d) - 1) * 4) + 1}, ${((xValue(d) - 1) * 4) + 2}, ${((xValue(d) - 1) * 4) + 3}, ${((xValue(d) - 1) * 4) + 4}]`);\r\n\r\n        const titleG = g.select('.title-group');\r\n        const titleGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'title-group');\r\n        titleG\r\n            .merge(titleGEnter)\r\n            .attr('transform', `translate(${innerWidth / 2}, -10)`)\r\n\r\n        // const titleText = \r\n        titleGEnter.append('text')\r\n            .attr('class', 'chart-title')\r\n            .attr('y', 0)\r\n            .attr('font-size', 30)\r\n            .attr('fill', 'black')\r\n            .attr('text-anchor', 'middle')\r\n            .merge(titleG.select('.chart-title'))\r\n            .html(title);\r\n    }\r\n\r\n    render() {\r\n        const { loading } = this.state;\r\n\r\n        let loader;\r\n        if (loading > 0) {\r\n            loader = <div className=\"loader\">\r\n                <Spinner animation=\"border\" />\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <section>\r\n                {loader}\r\n                <svg id=\"occupacy-band-chart\"></svg>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport WifiService from \"../Services/WifiService\";\r\nimport {\r\n    select,\r\n    scaleLinear,\r\n    scaleBand,\r\n    axisBottom,\r\n    axisLeft,\r\n    range,\r\n    interpolateSinebow,\r\n    format\r\n} from \"d3\";\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport class OccupacyChannelChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setupDraw();\r\n        this.loadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { threshold } = this.props;\r\n        if (threshold !== prevProps.threshold) {\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        WifiService.abort();\r\n    }\r\n\r\n    loadData() {\r\n        // /band/:band/threshold/:threshold\r\n        const { threshold } = this.props;\r\n\r\n        this.setState(() => ({\r\n            loading: 1\r\n        }));\r\n\r\n        WifiService.getChannelsOccupacy(threshold)\r\n            .then(response => {\r\n                this.setState(state => ({\r\n                    data: response.data,\r\n                    loading: state.loading - 1\r\n                }), function () {\r\n                    this.drawChart();\r\n                });\r\n            }).catch(() => {\r\n                this.setState(state => ({\r\n                    loading: state.loading - 1\r\n                }));\r\n            });\r\n    }\r\n\r\n    setupDraw() {\r\n        const margin = { top: 40, right: 20, bottom: 60, left: 65 };\r\n\r\n        const title = \"Channel occupancy %\";\r\n\r\n        const svg = select('#occupacy-channel-chart')\r\n            .attr('viewbox', '(0, 0, 960, 500)')\r\n            .attr('width', '100%')\r\n            .attr('height', 500);\r\n\r\n        const svgBoundaries = svg.node().getBoundingClientRect();\r\n        const width = svgBoundaries.width;\r\n        const height = svgBoundaries.height;\r\n\r\n        const xValue = d => d.Channel;\r\n        const xAxisLabel = \"Channel\";\r\n\r\n        const yValue = d => d.Occupacy;\r\n        const yAxisLabel = \"Occupancy\";\r\n\r\n        this.setState(() => ({\r\n            selection: svg,\r\n            width,\r\n            height,\r\n            margin,\r\n            title,\r\n            xAxisLabel,\r\n            yAxisLabel,\r\n            xValue,\r\n            yValue\r\n        }), function () {\r\n            this.drawChart();\r\n        });\r\n    }\r\n\r\n    drawChart() {\r\n        const {\r\n            data,\r\n            selection,\r\n            width,\r\n            height,\r\n            margin,\r\n            title,\r\n            xAxisLabel,\r\n            yAxisLabel,\r\n            xValue,\r\n            yValue\r\n        } = this.state;\r\n\r\n        const innerWidth = width - margin.right - margin.left;\r\n        const innerHeight = height - margin.top - margin.bottom;\r\n\r\n        // horizontal axis\r\n        // channels\r\n        const xScale = scaleBand()\r\n            .domain(range(1, 25))\r\n            .range([0, innerWidth])\r\n            .padding(0.1);\r\n\r\n        // vertical axis\r\n        // values\r\n        const yScale = scaleLinear()\r\n            .domain([1, 0])\r\n            .range([0, innerHeight])\r\n            .nice();\r\n\r\n        const colorScale = scaleLinear()\r\n            .domain([1, 24])\r\n            .range([0, 1])\r\n\r\n        const xAxis = axisBottom(xScale)\r\n            .tickSize(-innerHeight)\r\n            .tickPadding(15);\r\n\r\n        const yAxis = axisLeft(yScale)\r\n            .tickSize(-innerWidth)\r\n            .tickPadding(10);\r\n\r\n        const g = selection.selectAll('.container').data([null]);\r\n        const gEnter = g.enter().append('g')\r\n            .attr('class', 'container');\r\n        gEnter.merge(g)\r\n            .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n\r\n        const xAxisG = g.select('.x-axis');\r\n        const xAxisGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'x-axis');\r\n        xAxisG\r\n            .merge(xAxisGEnter)\r\n            .call(xAxis)\r\n            .attr('transform', `translate(0, ${innerHeight})`)\r\n            .selectAll('domain').remove();\r\n\r\n        // const xAxisLabelText = \r\n        xAxisGEnter.append('text')\r\n            .attr('class', 'axis-label')\r\n            .attr('y', 40)\r\n            .attr('font-size', 20)\r\n            .attr('fill', 'black')\r\n            .attr('text-anchor', 'middle')\r\n            .merge(xAxisG.select('.axis-label'))\r\n            .attr('x', innerWidth / 2)\r\n            .text(xAxisLabel);\r\n\r\n        const yAxisG = g.select('.y-axis');\r\n        const yAxisGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'y-axis');\r\n        yAxisG.merge(yAxisGEnter)\r\n            .call(yAxis)\r\n            .selectAll('domain').remove();\r\n\r\n        // const yAxisLabelText = \r\n        yAxisGEnter.append('text')\r\n            .attr('class', 'axis-label')\r\n            .attr('y', -35)\r\n            .attr('fill', 'black')\r\n            .attr('transform', 'rotate(-90)')\r\n            .attr('text-anchor', 'middle')\r\n            .attr('font-size', 20)\r\n            .merge(yAxisG.select('.axis-label'))\r\n            .attr('x', -innerHeight / 2)\r\n            .text(yAxisLabel);\r\n\r\n        const occFormat = format(\".2f\");\r\n\r\n        const channels = g.merge(gEnter).selectAll('.rect-channel').data(data, d => xValue(d));\r\n        const channelsEnter = channels.enter().append('rect')\r\n            .attr('class', 'rect-channel')\r\n            .attr('channel', d => xValue(d))\r\n            .attr('stroke', d => interpolateSinebow(colorScale(xValue(d))))\r\n            .attr('fill', d => interpolateSinebow(colorScale(xValue(d))))\r\n            .attr('stroke-width', 2)\r\n            .attr('stroke-linecap', 'round')\r\n            .attr('width', d => xScale.bandwidth())\r\n            .attr('y', d => innerHeight)\r\n            .attr('height', 0);\r\n\r\n        channelsEnter.merge(channels)\r\n            .transition()\r\n            .attr('x', d => xScale(xValue(d)))\r\n            .attr('y', d => yScale(yValue(d)))\r\n            .attr('height', d => innerHeight - yScale(yValue(d)));\r\n\r\n        const channelTitles = channels.merge(channelsEnter).selectAll('.rect-channel-title').data(d => [d]);\r\n        channelTitles.enter().append('title')\r\n            .attr('class', 'rect-channel-title')\r\n            .merge(channelTitles)\r\n            .text(d => `Channel ${xValue(d)}\\nOccupancy: ${occFormat(yValue(d))}%`);\r\n\r\n        const titleG = g.select('.title-group');\r\n        const titleGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'title-group');\r\n        titleG\r\n            .merge(titleGEnter)\r\n            .attr('transform', `translate(${innerWidth / 2}, -10)`)\r\n\r\n        // const titleText = \r\n        titleGEnter.append('text')\r\n            .attr('class', 'chart-title')\r\n            .attr('y', 0)\r\n            .attr('font-size', 30)\r\n            .attr('fill', 'black')\r\n            .attr('text-anchor', 'middle')\r\n            .merge(titleG.select('.chart-title'))\r\n            .text(title);\r\n    }\r\n\r\n    render() {\r\n        const { loading } = this.state;\r\n\r\n        let loader;\r\n        if (loading > 0) {\r\n            loader = <div className=\"loader\">\r\n                <Spinner animation=\"border\" />\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <section>\r\n                {loader}\r\n                <svg id=\"occupacy-channel-chart\"></svg>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport WifiService from \"../Services/WifiService\";\r\nimport {\r\n    select,\r\n    scaleLinear,\r\n    scaleTime,\r\n    scaleOrdinal,\r\n    axisBottom,\r\n    axisLeft,\r\n    range,\r\n    schemeCategory10,\r\n    min,\r\n    extent,\r\n    max,\r\n    line,\r\n    nest,\r\n    timeFormat,\r\n    timeMinute,\r\n    format\r\n} from \"d3\";\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction setDate(date, d, h, m) {\r\n    date = new Date(date);\r\n    date.setHours(date.getHours() + h);\r\n    return date;\r\n}\r\n\r\nfunction dateBetween(date, sh, sm, fh, fm) {\r\n    let s = parseInt(sh) * 60 + parseInt(sm);\r\n    let f = parseInt(fh) * 60 + parseInt(fm);\r\n    let t = date.getHours() * 60 + date.getMinutes();\r\n    return t >= s && t <= f;\r\n}\r\n\r\nexport class ValuesChannelChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: 0,\r\n            selectedChannels: []\r\n        };\r\n\r\n        this.handleChannelChange = this.handleChannelChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setupDraw();\r\n        this.loadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { threshold, from, to, ratio } = this.props;\r\n        if (threshold !== prevProps.threshold || ratio !== prevProps.ratio) {\r\n            this.loadData();\r\n        }\r\n        if (from !== prevProps.from || to !== prevProps.to) {\r\n            this.filterData();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        WifiService.abort();\r\n    }\r\n\r\n    handleChannelChange(d) {\r\n        const { selectedChannels } = this.state;\r\n        if (selectedChannels.includes(d)) {\r\n            selectedChannels.splice(selectedChannels.findIndex(i => i === d), 1)\r\n        } else {\r\n            selectedChannels.push(d);\r\n        }\r\n        this.setState(() => ({\r\n            selectedChannels: selectedChannels\r\n        }), function () {\r\n            this.filterData()\r\n        })\r\n    }\r\n\r\n    loadData() {\r\n        // /band/:band/threshold/:threshold/ratio/:ratio\r\n        const { threshold, ratio } = this.props;\r\n\r\n        this.setState(() => ({\r\n            loading: 1\r\n        }));\r\n\r\n        WifiService.getChannelsValues(threshold, ratio)\r\n            .then(response => {\r\n                var parsed = response.data.map(d => ({\r\n                    ...d,\r\n                    From: setDate(d.From, 0, -2),\r\n                    visibility: 'visible'\r\n                }));\r\n\r\n                this.setState(state => ({\r\n                    data: parsed,\r\n                    loading: state.loading - 1\r\n                }), function () {\r\n                    this.filterData();\r\n                });\r\n            }).catch(() => {\r\n                this.setState(state => ({\r\n                    loading: state.loading - 1\r\n                }));\r\n            });\r\n    }\r\n\r\n    filterData() {\r\n        const { data, selectedChannels } = this.state;\r\n        const { from, to } = this.props;\r\n        let fData = [];\r\n\r\n        let check = d =>\r\n            selectedChannels.includes(d.Channel) && dateBetween(d.From, ...from.split(\":\"), ...to.split(\":\"))\r\n                ? 'visible'\r\n                : 'hidden';\r\n\r\n        if (selectedChannels.length > 0) {\r\n            fData = data.map(d => ({\r\n                ...d,\r\n                visibility: check(d)\r\n            }));\r\n        } else {\r\n            fData = data.map(d => ({\r\n                ...d,\r\n                visibility: dateBetween(d.From, ...from.split(\":\"), ...to.split(\":\")) ? 'visible' : 'hidden'\r\n            }));\r\n        }\r\n\r\n        this.setState(() => ({\r\n            data: fData\r\n        }), function () {\r\n            this.drawChart();\r\n        });\r\n    }\r\n\r\n    setupDraw() {\r\n        const margin = { top: 40, right: 110, bottom: 60, left: 65 };\r\n\r\n        const title = \"Runchart\";\r\n\r\n        const svg = select('#value-channel-chart')\r\n            .attr('viewbox', '(0, 0, 960, 500)')\r\n            .attr('width', '100%')\r\n            .attr('height', 500);\r\n\r\n        const svgBoundaries = svg.node().getBoundingClientRect();\r\n        const width = svgBoundaries.width;\r\n        const height = svgBoundaries.height;\r\n\r\n        const xValue = d => d.From;\r\n        const xAxisLabel = \"Time\";\r\n\r\n        const yValue = d => d.Averaged;\r\n        const yAxisLabel = \"Value\";\r\n\r\n        const cValue = d => d.Channel;\r\n\r\n        this.setState(() => ({\r\n            selection: svg,\r\n            width,\r\n            height,\r\n            margin,\r\n            title,\r\n            xAxisLabel,\r\n            yAxisLabel,\r\n            xValue,\r\n            yValue,\r\n            cValue,\r\n        }), function () {\r\n            this.drawChart();\r\n        });\r\n    }\r\n\r\n    drawChart() {\r\n        const {\r\n            data,\r\n            selection,\r\n            width,\r\n            height,\r\n            margin,\r\n            title,\r\n            xAxisLabel,\r\n            yAxisLabel,\r\n            xValue,\r\n            yValue,\r\n            cValue,\r\n            selectedChannels\r\n        } = this.state;\r\n\r\n        const innerWidth = width - margin.right - margin.left;\r\n        const innerHeight = height - margin.top - margin.bottom;\r\n\r\n        // horizontal axis\r\n        // channels\r\n        const xScale = scaleTime()\r\n            .domain(extent(data.filter(d => d.visibility === 'visible'), xValue))\r\n            .range([0, innerWidth]);\r\n\r\n        // vertical axis\r\n        // values\r\n        const yScale = scaleLinear()\r\n            .domain([min(data, d => yValue(d)), max(data, d => yValue(d))])\r\n            .range([innerHeight, 0])\r\n            .nice();\r\n\r\n        const colorScale = scaleOrdinal()\r\n            .domain(range(1, 25))\r\n            .range(schemeCategory10)\r\n\r\n        const xAxis = axisBottom(xScale)\r\n            .tickSize(-innerHeight)\r\n            .tickPadding(15)\r\n            .tickFormat(timeFormat(\"%H:%M\"))\r\n            .ticks(timeMinute.every(15));\r\n\r\n        const yAxis = axisLeft(yScale)\r\n            .tickSize(-innerWidth)\r\n            .tickPadding(10);\r\n\r\n        const g = selection.selectAll('.container').data([null]);\r\n        const gEnter = g.enter().append('g')\r\n            .attr('class', 'container');\r\n        gEnter.merge(g)\r\n            .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n\r\n        const xAxisG = g.select('.x-axis');\r\n        const xAxisGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'x-axis');\r\n        xAxisG\r\n            .merge(xAxisGEnter)\r\n            .call(xAxis)\r\n            .attr('transform', `translate(0, ${innerHeight})`)\r\n            .selectAll('domain').remove();\r\n\r\n        // const xAxisLabelText = \r\n        xAxisGEnter.append('text')\r\n            .attr('class', 'axis-label')\r\n            .attr('y', 40)\r\n            .attr('font-size', 20)\r\n            .attr('fill', 'black')\r\n            .attr('text-anchor', 'middle')\r\n            .merge(xAxisG.select('.axis-label'))\r\n            .attr('x', innerWidth / 2)\r\n            .text(xAxisLabel);\r\n\r\n        const yAxisG = g.select('.y-axis');\r\n        const yAxisGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'y-axis');\r\n        yAxisG.merge(yAxisGEnter)\r\n            .call(yAxis)\r\n            .selectAll('domain').remove();\r\n\r\n        // const yAxisLabelText = \r\n        yAxisGEnter.append('text')\r\n            .attr('class', 'axis-label')\r\n            .attr('y', -35)\r\n            .attr('fill', 'black')\r\n            .attr('transform', 'rotate(-90)')\r\n            .attr('text-anchor', 'middle')\r\n            .attr('font-size', 20)\r\n            .merge(yAxisG.select('.axis-label'))\r\n            .attr('x', -innerHeight / 2)\r\n            .text(yAxisLabel);\r\n\r\n        const channelsG = g.select('.channels');\r\n        const channelsGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'channels');\r\n\r\n        const channelsValues = channelsG.merge(channelsGEnter).selectAll('.channel-value-circle').data(data);\r\n        const channelsValuesEnter = channelsValues.enter().append('circle')\r\n            .attr('class', 'channel-value-circle')\r\n            .attr('stroke', d => 'none')\r\n            .attr('fill', d => colorScale(cValue(d)))\r\n            .attr('r', 5)\r\n            .attr('opacity', 1);\r\n\r\n        channelsValuesEnter.merge(channelsValues)\r\n            .attr('cx', d => xScale(xValue(d)))\r\n            .attr('cy', d => yScale(yValue(d)))\r\n            .transition()\r\n            .attr('opacity', d => d.visibility === 'visible' ? 1 : 0);\r\n\r\n        const occFormat = format(\".2f\");\r\n        const fromFormat = timeFormat(\"%H:%M:%S\");\r\n\r\n        const channelTitles = channelsValues.merge(channelsValuesEnter).selectAll('.circle-channel-title').data(d => [d]);\r\n        channelTitles.enter().append('title')\r\n            .attr('class', 'circle-channel-title')\r\n            .merge(channelTitles)\r\n            .text(d => `Channel ${cValue(d)}\\nOccupancy: ${occFormat(yValue(d))}%\\nTimestamp: ${fromFormat(xValue(d))}`);\r\n\r\n        channelsValues.exit().remove();\r\n\r\n        const lineData = nest()\r\n            .key(d => cValue(d))\r\n            .entries(data);\r\n\r\n        const lineGenerator = line()\r\n            .x(d => xScale(xValue(d)))\r\n            .y(d => yScale(yValue(d)));\r\n\r\n        const channelsLines = channelsG.merge(channelsGEnter).selectAll('.channel-value-line').data(lineData);\r\n        channelsLines.enter().append('path')\r\n            .attr('class', 'channel-value-line')\r\n            .attr('stroke', d => colorScale(d.key))\r\n            .attr('fill', 'none')\r\n            .attr('opacity', 1)\r\n            .merge(channelsLines)\r\n            .transition()\r\n            .attr('opacity', d => d.values.some(d => d.visibility === 'visible') ? 1 : 0)\r\n            .attr('d', d => lineGenerator(d.values));\r\n\r\n        channelsLines.exit().remove();\r\n\r\n        const legendsG = g.select('.legends');\r\n        const legendsGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'legends')\r\n            .attr('transform', `translate(${innerWidth + 20}, -${margin.top})`);\r\n\r\n        const legends = legendsG.merge(legendsGEnter).selectAll('.legend-group').data(range(1, 25));\r\n        const legendsEnter = legends.enter().append('g')\r\n            .attr('transform', d => `translate(0, ${d * 20})`)\r\n            .on('click', this.handleChannelChange);\r\n\r\n        // const legendsUpdate = \r\n        legendsEnter\r\n            .merge(legends)\r\n            .attr('class', d => `legend-group ${selectedChannels.includes(d) ? 'active' : ''}`);\r\n\r\n        legendsEnter.append('circle')\r\n            .attr('fill', d => colorScale(d))\r\n            .attr('cy', 0)\r\n            .attr('cx', 0)\r\n            .attr('r', 5);\r\n\r\n        legendsEnter.append('text')\r\n            .text(d => `Channel ${d}`)\r\n            .attr('transform', 'translate(10, 5)');\r\n\r\n        const titleG = g.select('.title-group');\r\n        const titleGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'title-group');\r\n        titleG\r\n            .merge(titleGEnter)\r\n            .attr('transform', `translate(${innerWidth / 2}, -10)`)\r\n\r\n        // const titleText = \r\n        titleGEnter.append('text')\r\n            .attr('class', 'chart-title')\r\n            .attr('y', 0)\r\n            .attr('font-size', 30)\r\n            .attr('fill', 'black')\r\n            .attr('text-anchor', 'middle')\r\n            .merge(titleG.select('.chart-title'))\r\n            .text(title);\r\n    }\r\n\r\n    render() {\r\n        const { loading } = this.state;\r\n\r\n        let loader;\r\n        if (loading > 0) {\r\n            loader = <div className=\"loader\">\r\n                <Spinner animation=\"border\" />\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <section>\r\n                {loader}\r\n                <svg id=\"value-channel-chart\"></svg>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport WifiService from \"../Services/WifiService\";\r\nimport {\r\n    select,\r\n    axisBottom,\r\n    axisLeft,\r\n    range,\r\n    extent,\r\n    scaleTime,\r\n    scaleBand,\r\n    interpolatePlasma,\r\n    timeFormat,\r\n    timeMinute\r\n} from \"d3\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction dateBetween(date, sh, sm, fh, fm) {\r\n    let s = parseInt(sh) * 60 + parseInt(sm);\r\n    let f = parseInt(fh) * 60 + parseInt(fm);\r\n    let t = date.getHours() * 60 + date.getMinutes();\r\n    return t >= s && t <= f;\r\n}\r\n\r\nfunction setDate(date, d, h, m) {\r\n    date = new Date(date);\r\n    date.setHours(date.getHours() + h);\r\n    return date;\r\n}\r\n\r\nexport class ValuesChannelSpectogram extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setupDraw();\r\n        this.loadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { threshold, ratio, from, to } = this.props;\r\n        if (threshold !== prevProps.threshold || ratio !== prevProps.ratio) {\r\n            this.loadData();\r\n        } else if (from !== prevProps.from || to !== prevProps.to) {\r\n            this.filterData();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        WifiService.abort();\r\n    }\r\n\r\n    loadData() {\r\n        // /band/:band/threshold/:threshold/ratio/:ratio\r\n        const { threshold, ratio } = this.props;\r\n\r\n        this.setState(() => ({\r\n            loading: 1\r\n        }));\r\n\r\n        WifiService.getChannelsValues(threshold, ratio)\r\n            .then(response => {\r\n                var parsed = response.data.map(d => ({\r\n                    ...d,\r\n                    From: setDate(d.From, 0, -2, 0),\r\n                    visibility: 'visible'\r\n                }));\r\n                this.setState(state => ({\r\n                    data: parsed,\r\n                    loading: state.loading - 1\r\n                }), function () {\r\n                    this.filterData();\r\n                });\r\n            }).catch(() => {\r\n                this.setState(state => ({\r\n                    loading: state.loading - 1\r\n                }));\r\n            });\r\n    }\r\n\r\n    filterData() {\r\n        const { data } = this.state;\r\n        const { from, to } = this.props;\r\n        let fData = [];\r\n\r\n        fData = data.map(d => ({\r\n            ...d,\r\n            visibility: dateBetween(d.From, ...from.split(\":\"), ...to.split(\":\")) ? 'visible' : 'hidden'\r\n        }));\r\n\r\n        this.setState(() => ({\r\n            data: fData\r\n        }), function () {\r\n            this.drawChart();\r\n        });\r\n    }\r\n\r\n    setupDraw() {\r\n        const margin = { top: 40, right: 20, bottom: 60, left: 65 };\r\n\r\n        const title = \"Channel occupancy spectrogram\";\r\n\r\n        const svg = select('#value-channel-spectrogram')\r\n            .attr('viewbox', '(0, 0, 960, 500)')\r\n            .attr('width', '100%')\r\n            .attr('height', 500);\r\n\r\n        const svgBoundaries = svg.node().getBoundingClientRect();\r\n        const width = svgBoundaries.width;\r\n        const height = svgBoundaries.height;\r\n\r\n        const xValue = d => d.From;\r\n        const xAxisLabel = \"Time\";\r\n\r\n        const yValue = d => d.Channel;\r\n        const yAxisLabel = \"Channel\";\r\n\r\n        const cValue = d => d.Averaged;\r\n\r\n        this.setState(() => ({\r\n            selection: svg,\r\n            width,\r\n            height,\r\n            margin,\r\n            title,\r\n            xAxisLabel,\r\n            yAxisLabel,\r\n            xValue,\r\n            yValue,\r\n            cValue\r\n        }), function () {\r\n            this.drawChart();\r\n        });\r\n    }\r\n\r\n    drawChart() {\r\n        const {\r\n            data,\r\n            selection,\r\n            width,\r\n            height,\r\n            margin,\r\n            title,\r\n            xAxisLabel,\r\n            yAxisLabel,\r\n            xValue,\r\n            yValue,\r\n            cValue\r\n        } = this.state;\r\n\r\n        const innerWidth = width - margin.right - margin.left;\r\n        const innerHeight = height - margin.top - margin.bottom;\r\n\r\n        // horizontal axis\r\n        // channels\r\n        const xScale = scaleTime()\r\n            .domain(extent(data.filter(d => d.visibility === 'visible'), xValue))\r\n            .range([0, innerWidth]);\r\n\r\n        // vertical axis\r\n        // values\r\n        const yScale = scaleBand()\r\n            .domain(range(1, 25))\r\n            .range([0, innerHeight]);\r\n\r\n        const xAxis = axisBottom(xScale)\r\n            .tickSize(-innerHeight)\r\n            .tickPadding(15)\r\n            .tickFormat(timeFormat(\"%H:%M\"))\r\n            .ticks(timeMinute.every(15));\r\n\r\n        const yAxis = axisLeft(yScale)\r\n            .tickSize(-innerWidth)\r\n            .tickPadding(10);\r\n\r\n        const g = selection.selectAll('.container').data([null]);\r\n        const gEnter = g.enter().append('g')\r\n            .attr('class', 'container');\r\n        gEnter.merge(g)\r\n            .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n\r\n        const xAxisG = g.select('.x-axis');\r\n        const xAxisGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'x-axis');\r\n        xAxisG\r\n            .merge(xAxisGEnter)\r\n            .call(xAxis)\r\n            .attr('transform', `translate(0, ${innerHeight})`)\r\n            .selectAll('domain').remove();\r\n\r\n        // const xAxisLabelText = \r\n        xAxisGEnter.append('text')\r\n            .attr('class', 'axis-label')\r\n            .attr('y', 40)\r\n            .attr('font-size', 20)\r\n            .attr('fill', 'black')\r\n            .attr('text-anchor', 'middle')\r\n            .merge(xAxisG.select('.axis-label'))\r\n            .attr('x', innerWidth / 2)\r\n            .text(xAxisLabel);\r\n\r\n        const yAxisG = g.select('.y-axis');\r\n        const yAxisGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'y-axis');\r\n        yAxisG.merge(yAxisGEnter)\r\n            .call(yAxis)\r\n            .selectAll('domain').remove();\r\n\r\n        // const yAxisLabelText = \r\n        yAxisGEnter.append('text')\r\n            .attr('class', 'axis-label')\r\n            .attr('y', -35)\r\n            .attr('fill', 'black')\r\n            .attr('transform', 'rotate(-90)')\r\n            .attr('text-anchor', 'middle')\r\n            .attr('font-size', 20)\r\n            .merge(yAxisG.select('.axis-label'))\r\n            .attr('x', -innerHeight / 2)\r\n            .text(yAxisLabel);\r\n\r\n        const w = Math.ceil(innerWidth / (data.filter(d => d.visibility === 'visible').length / 24));\r\n\r\n        const channelsG = g.select('.channels');\r\n        const channelsGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'channels')\r\n\r\n        const channels = channelsG.merge(channelsGEnter).selectAll('.channel-value').data(data, d => d.Channel + d.From);\r\n        channels.enter().append('rect')\r\n            .attr('class', 'channel-value')\r\n            .attr('value', d => cValue(d))\r\n            .attr('stroke', d => 'none')\r\n            .attr('fill', d => interpolatePlasma(cValue(d)))\r\n            .attr('height', 0)\r\n            .attr('y', 0)\r\n            .attr('x', 0)\r\n            .merge(channels)\r\n            .transition()\r\n            .attr('visibility', d => d.visibility)\r\n            .attr('width', w)\r\n            .attr('height', d => yScale.bandwidth())\r\n            .attr('x', d => xScale(xValue(d)))\r\n            .attr('y', d => yScale(yValue(d)));\r\n\r\n        channels.exit().remove();\r\n\r\n        const titleG = g.select('.title-group');\r\n        const titleGEnter = gEnter\r\n            .append('g')\r\n            .attr('class', 'title-group');\r\n        titleG\r\n            .merge(titleGEnter)\r\n            .attr('transform', `translate(${innerWidth / 2}, -10)`)\r\n\r\n        // const titleText = \r\n        titleGEnter.append('text')\r\n            .attr('class', 'chart-title')\r\n            .attr('y', 0)\r\n            .attr('font-size', 30)\r\n            .attr('fill', 'black')\r\n            .attr('text-anchor', 'middle')\r\n            .merge(titleG.select('.chart-title'))\r\n            .text(title);\r\n    }\r\n\r\n    render() {\r\n        const { loading } = this.state;\r\n\r\n        let loader;\r\n        if (loading > 0) {\r\n            loader = <div className=\"loader\">\r\n                <Spinner animation=\"border\" />\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <section>\r\n                {loader}\r\n                <svg id=\"value-channel-spectrogram\"></svg>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { OccupacyBandChart } from \"../Charts/OccupacyBandChart\";\r\nimport { OccupacyChannelChart } from \"../Charts/OccupacyChannelChart\";\r\nimport { ValuesChannelChart } from \"../Charts/ValuesChannelChart\";\r\nimport { ValuesChannelSpectogram } from \"../Charts/ValuesChannelSpectogram\";\r\nimport { Container, Row, Col, Jumbotron, Image, Form } from 'react-bootstrap';\r\nimport debounce from 'lodash.debounce';\r\n\r\nexport class Place extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.match.params.id,\r\n      bandOccupancy: {\r\n        threshold: 150,\r\n        dbthreshold: 150\r\n      },\r\n      channelOccupancy: {\r\n        threshold: 150,\r\n        dbthreshold: 150\r\n      },\r\n      runchart: {\r\n        threshold: 150,\r\n        dbthreshold: 150,\r\n        from: \"17:00\",\r\n        to: \"23:00\",\r\n        ratio: 30\r\n      },\r\n      spectogram: {\r\n        threshold: 150,\r\n        dbthreshold: 150,\r\n        from: \"17:00\",\r\n        to: \"23:00\",\r\n        ratio: 30\r\n      }\r\n    }\r\n\r\n    this.debouncedHandleThresholdChange = debounce(this.debouncedHandleThresholdChange.bind(this), 1000);\r\n    this.handleThresholdChange = this.handleThresholdChange.bind(this);\r\n\r\n    this.handleParamChange = this.handleParamChange.bind(this);\r\n  }\r\n\r\n  handleThresholdChange(e, chart) {\r\n    e.persist();\r\n    this.setState(state => ({\r\n      [chart]: {\r\n        ...state[chart],\r\n        threshold: e.target.value\r\n      }\r\n    }));\r\n    this.debouncedHandleThresholdChange(e, chart)\r\n  }\r\n\r\n  debouncedHandleThresholdChange(e, chart) {\r\n    e.persist();\r\n    this.setState(state => ({\r\n      [chart]: {\r\n        ...state[chart],\r\n        dbthreshold: e.target.value\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleParamChange(e, chart, param) {\r\n    e.persist();\r\n    this.setState(state => ({\r\n      [chart]: {\r\n        ...state[chart],\r\n        [param]: e.target.value\r\n      }\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { id, bandOccupancy, channelOccupancy, runchart, spectogram } = this.state;\r\n    return (\r\n      <div>\r\n        <Jumbotron fluid>\r\n          <Container>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <div className=\"place-jumbotron-title\">\r\n                  <h1>Camp Nou</h1>\r\n                  <h4>Sold-Out Stadium</h4>\r\n                </div>\r\n              </Col>\r\n              <Col xs={8}>\r\n                <Image src={'/images/places/' + id + '.jpg'} rounded />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Jumbotron>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col xs={10}>\r\n              <OccupacyBandChart threshold={bandOccupancy.dbthreshold} />\r\n            </Col>\r\n            <Col xs={2}>\r\n              <Col xs={12}>\r\n                <Form>\r\n                  <Form.Group controlId=\"bandOccupancyThreshold\">\r\n                    <Form.Label>Threshold [{bandOccupancy.threshold}]</Form.Label>\r\n                    <Form.Control onChange={(e) => this.handleThresholdChange(e, 'bandOccupancy')} type=\"range\" value={bandOccupancy.threshold} min=\"50\" max=\"500\" step=\"10\" />\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n              <Col xs={12} className=\"text-center\">\r\n                {/* http://www.hostmath.com/ */}\r\n                {/* \\bar{\\sigma}_b=\\frac{(\\sum_{c\\epsilon b}\\frac{\\sum_{t=1}^T\\sigma_{c, t}}{T})}{B} */}\r\n                <Image className=\"img-fluid\" src={'/images/formulas/band_occupacy.png'} rounded />\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={10}>\r\n              <OccupacyChannelChart threshold={channelOccupancy.dbthreshold} />\r\n            </Col>\r\n            <Col xs={2}>\r\n              <Col xs={12}>\r\n                <Form>\r\n                  <Form.Group controlId=\"channelOccupancyThreshold\">\r\n                    <Form.Label>Threshold [{channelOccupancy.threshold}]</Form.Label>\r\n                    <Form.Control onChange={(e) => this.handleThresholdChange(e, 'channelOccupancy')} type=\"range\" value={channelOccupancy.threshold} min=\"50\" max=\"500\" step=\"10\" />\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n              <Col xs={12} className=\"text-center\">\r\n                {/* \\bar{\\sigma}_c=\\frac{\\sum_{t=1}^T\\sigma_{c, t}}{T} */}\r\n                <Image className=\"img-fluid\" src={'/images/formulas/channel_occupacy.png'} rounded />\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={10}>\r\n              <ValuesChannelChart threshold={runchart.dbthreshold} from={runchart.from} to={runchart.to} ratio={runchart.ratio} />\r\n            </Col>\r\n            <Col xs={2}>\r\n              <Col xs={12}>\r\n                <Form>\r\n                  <Form.Group controlId=\"runchartThreshold\">\r\n                    <Form.Label>Threshold [{runchart.threshold}]</Form.Label>\r\n                    <Form.Control onChange={(e) => this.handleThresholdChange(e, 'runchart')} type=\"range\" value={runchart.threshold} min=\"50\" max=\"500\" step=\"10\" />\r\n                  </Form.Group>\r\n                  <Row>\r\n                    <Col xs={6}>\r\n                      <Form.Group>\r\n                        <Form.Label>From [{runchart.from}]</Form.Label>\r\n                        <Form.Control onChange={(e) => this.handleParamChange(e, 'runchart', 'from')} type=\"time\" value={runchart.from} min=\"17:20\" max=\"20:00\" step=\"600\" />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                      <Form.Group>\r\n                        <Form.Label>To [{runchart.to}]</Form.Label>\r\n                        <Form.Control onChange={(e) => this.handleParamChange(e, 'runchart', 'to')} type=\"time\" value={runchart.to} min=\"17:30\" max=\"20:00\" step=\"600\" />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Form.Group controlId=\"runchartRatio\">\r\n                    <Form.Label>Sliding window</Form.Label>\r\n                    <Form.Control onChange={(e) => this.handleParamChange(e, 'runchart', 'ratio')} as=\"select\" value={runchart.ratio}>\r\n                      <option value=\"30\">5 min</option>\r\n                      <option value=\"60\">10 min</option>\r\n                      <option value=\"90\">15 min</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n              <Col xs={12}>\r\n                <p>\r\n                  Each value represents an average of 1000 values for each channel at one moment in time. The values, before being averaged, are being thresholded by the selected value.\r\n                </p>\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={10}>\r\n              <ValuesChannelSpectogram threshold={spectogram.dbthreshold} from={spectogram.from} to={spectogram.to} ratio={spectogram.ratio} />\r\n            </Col>\r\n            <Col xs={2}>\r\n              <Col xs={12}>\r\n                <Form>\r\n                  <Form.Group controlId=\"spectogramThreshold\">\r\n                    <Form.Label>Threshold [{spectogram.threshold}]</Form.Label>\r\n                    <Form.Control onChange={(e) => this.handleThresholdChange(e, 'spectogram')} type=\"range\" value={spectogram.threshold} min=\"50\" max=\"500\" step=\"10\" />\r\n                  </Form.Group>\r\n                  <Row>\r\n                    <Col xs={6}>\r\n                      <Form.Group>\r\n                        <Form.Label>From [{spectogram.from}]</Form.Label>\r\n                        <Form.Control onChange={(e) => this.handleParamChange(e, 'spectogram', 'from')} type=\"time\" value={spectogram.from} min=\"17:30\" />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                      <Form.Group>\r\n                        <Form.Label>To [{spectogram.to}]</Form.Label>\r\n                        <Form.Control onChange={(e) => this.handleParamChange(e, 'spectogram', 'to')} type=\"time\" value={spectogram.to} />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Form.Group controlId=\"spectogramRatio\">\r\n                    <Form.Label>Sliding window</Form.Label>\r\n                    <Form.Control onChange={(e) => this.handleParamChange(e, 'spectogram', 'ratio')} as=\"select\" value={spectogram.ratio}>\r\n                      <option value=\"30\">5 min</option>\r\n                      <option value=\"60\">10 min</option>\r\n                      <option value=\"90\">15 min</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n              <Col xs={12}>\r\n                <p>\r\n                  Each color represents an average of 1000 values for each channel at one moment in time. The values, before being averaged, are being thresholded by the selected value.\r\n                  The displayed values are filtered by the timespan selected with the above buttons.\r\n                </p>\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div >\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport \"typeface-roboto\";\r\nimport { Home } from './components/pages/home';\r\nimport { Places } from './components/pages/places';\r\nimport { Place } from './components/pages/place';\r\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './app.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">WIFI Visualizer</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n            <Link to=\"/places\" className=\"nav-link\">Locations</Link>\r\n            <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n          </Nav>\r\n          <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Switch>\r\n        <Route path=\"/places/:id\" component={Place} />\r\n        <Route path=\"/places\">\r\n          <Places />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}